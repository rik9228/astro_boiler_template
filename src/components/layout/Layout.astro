---
import { SITE_CONFIG } from ':/site';
import { images } from '@/scripts/util/images';
import BaseHead from '@/components/layout/BaseHead/BaseHead.astro';
import BaseScript from '@/components/layout/BaseScript/BaseScript.astro';
import { type Props as Head } from './BaseHead/BaseHead.astro';

// Import the global style sheet file here so that it is included on
// all pages through the use of the <BaseHead /> component.
// import '@/styles/global.scss';

export const IMG_PATH_COMMON = '/assets/images/common/';

interface Props extends Head {
  PAGE_ID?: string;
}

const { WEB_SITE_NAME, WEB_SITE_DESCRIPTION, WEB_SITE_KEYWORDS } = SITE_CONFIG;
const { title = WEB_SITE_NAME, description = WEB_SITE_DESCRIPTION, keywords = WEB_SITE_KEYWORDS, PAGE_ID } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={title} description={description} keywords={keywords} />
    <style is:global define:vars={{ ...images, pageId: PAGE_ID }}></style>
  </head>
  <body class={`page-${PAGE_ID}`}>
    <slot />

    {
      /* 

      原則：.astroコンポーネントではスクリプトを書かない
      理由：ビルド後のファイル名の変更等が効かないため
      背景：astro テンプレートで独自に書いたスクリプトはastro のビルドオプションに属される。より柔軟性を考慮し、チャンクファイル（複数のエントリーポイントがあるスクリプト）については、
      scripts配下の「common.ts」に集約し、それぞれのページごとでimportして使用する形を原則とする。
      ※ここでビルドされたスクリプトは astro.config > `vite.build.rollupOption.output.chunkfileNames` より指定が可能

      - Astroテンプレート で実行する場合は、ファイル名Layout.astro_astro_type_script_index_0_lang.BrJN-ZXM のようなファイル名として生成される。 -> astro オプションに属する
      - それぞれのページで単純に.ts ファイルを読み込んで実行する場合は、ファイル名.hash.js として生成される。 -> vite option に属する
      - それぞれ１か所のページでのみ使用される場合は、ページごとの処理は、直接ビルド後のhtmlファイルにスクリプトが挿入されるが、2か所以上で実行された場合は、別ファイルとして切り出される。
    */
    }

    <BaseScript />
  </body>
</html>
